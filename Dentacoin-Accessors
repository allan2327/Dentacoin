 pragma solidity ^0.4.2;

 contract exToken {
    uint256 public totalSupply;
    uint256 public buyPriceEth;
    uint256 public sellPriceEth;
    uint256 public minBalanceForAccounts;

    mapping (address => uint256) public balanceOf;
 }



 contract DentacoinAccessors {
    exToken public externalToken;
    function DentacoinAccessors(){
        externalToken = exToken(0x6F47980674550d8c8240e6eaf3B594F562Adc7A9);
        //externalToken = exToken(0xFf455398b8a94bAd01B216DecC4cFa4eEDDb3705);  //testnet
    }

    function totalSupply() constant returns (uint256 totalSupply) {
        return externalToken.totalSupply();
    }
    function buyPriceEth() constant returns (uint256 buyPriceEth) {
        return externalToken.buyPriceEth();
    }
    function sellPriceEth() constant returns (uint256 sellPriceEth) {
        return externalToken.sellPriceEth();
    }
    function minBalanceForAccounts() constant returns (uint256 minBalanceForAccounts) {
        return externalToken.minBalanceForAccounts();
    }

    function balanceOf(address _owner) constant returns (uint256 balance) {
        return externalToken.balanceOf(_owner);
    }
 }
